from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
from state.session_store import sessions
import requests
import db

async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    session = sessions.get(user_id)

    if not session or "cookies" not in session:
        await update.message.reply_text("‚ùå –í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /login.")
        return

    try:
        response = requests.get(
            f"{db.BACKEND_URL}/api/auth/check",
            cookies=session["cookies"]
        )

        if response.status_code == 200:
            user_data = response.json()
            full_name = user_data.get("fullName", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            email = user_data.get("email", "‚Äî")
            profile_pic = user_data.get("profilePic")

            text = f"üë§ –í—ã –≤–æ—à–ª–∏ –∫–∞–∫: <b>{full_name}</b>\nüìß Email: {email}"

            if profile_pic:
                await update.message.reply_photo(
                    photo=profile_pic,
                    caption=text,
                    parse_mode="HTML"
                )
            else:
                await update.message.reply_text(text, parse_mode="HTML")
        else:
            await update.message.reply_text("‚ö†Ô∏è –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –í–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é /login.")
    except Exception as e:
        await update.message.reply_text(f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}")

profile_handler = CommandHandler("me", profile)
